{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ea200304d/Desktop/ETF/rti.PIA/projekat/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nlet AgencijaPrikazComponent = class AgencijaPrikazComponent {\n  constructor(route, korisnik, objService, posloviService) {\n    this.route = route;\n    this.korisnik = korisnik;\n    this.objService = objService;\n    this.posloviService = posloviService;\n    this.ulogovan = null;\n    this.skraceni_opis = true;\n    this.min_datum = new Date().toISOString().split(\"T\")[0];\n    this.route.paramMap.subscribe(params => {\n      this.id = params.get('id');\n    });\n  }\n\n  prosiri_opis() {\n    console.log(\"usao\");\n    this.skraceni_opis = false;\n    this.opis_za_prikaz = this.agencija.dodatno['opis'];\n  }\n\n  ngOnInit() {\n    if (sessionStorage.getItem('klijent') || sessionStorage.getItem('agencija')) {\n      this.ulogovan = JSON.parse(sessionStorage.getItem('klijent')) || JSON.parse(sessionStorage.getItem('agencija'));\n    }\n\n    this.korisnik.dohvati_korisnika(this.id).subscribe(ag => {\n      this.agencija = ag;\n      this.opis_za_prikaz = this.agencija.dodatno['opis'].slice(0, 200);\n    });\n    this.korisnik.dohvati_komentare(this.id).subscribe(komentari => {\n      if (komentari) {\n        this.komentari = komentari;\n        console.log(komentari);\n      }\n    });\n    this.objService.sve_za_korisnika(this.ulogovan.korisnicko_ime).subscribe(res => {\n      if (res) {\n        this.objekti = res;\n      }\n    }); //agencija.dodatno['opis']\n  }\n\n  posalji_zahtev() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const data = {\n        agencija: _this.agencija.korisnicko_ime,\n        klijent: _this.ulogovan.korisnicko_ime,\n        objekat: _this.objekat,\n        pocetak: _this.pocetak,\n        kraj: _this.kraj,\n        status: \"Послат захтев\"\n      };\n\n      _this.posloviService.dodaj_posao(data).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (res) {\n          if (!_this.kraj || !_this.objekat || !_this.pocetak || _this.pocetak > _this.kraj) {\n            _this.greska = \"Погрешно унети подаци!\";\n            return;\n          } else {\n            _this.greska = null;\n          }\n\n          const sleep = /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator(function* (milliseconds) {\n              yield new Promise(resolve => {\n                return setTimeout(resolve, milliseconds);\n              });\n            });\n\n            return function sleep(_x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }();\n\n          if (res['message'] == 'ok') {\n            _this.uspeh = \"Успешно послат захтев за сарадњу! Прозор ће се затворити за: \";\n            _this.brojac = 5;\n            setTimeout(() => {\n              _this.uspeh = null;\n\n              _this.modalZatvaranje.nativeElement.click();\n            }, 5000);\n\n            for (let i = 5; i > 0; i--) {\n              yield sleep(1000);\n              _this.brojac--;\n            }\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n};\n\n__decorate([ViewChild('modalZatvaranje')], AgencijaPrikazComponent.prototype, \"modalZatvaranje\", void 0);\n\nAgencijaPrikazComponent = __decorate([Component({\n  selector: 'app-agencija-prikaz',\n  templateUrl: './agencija-prikaz.component.html',\n  styleUrls: ['./agencija-prikaz.component.css']\n})], AgencijaPrikazComponent);\nexport { AgencijaPrikazComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","AgencijaPrikazComponent","constructor","route","korisnik","objService","posloviService","Date","toISOString","split","paramMap","subscribe","params","id","get","prosiri_opis","console","log","skraceni_opis","opis_za_prikaz","agencija","dodatno","ngOnInit","sessionStorage","getItem","ulogovan","JSON","parse","dohvati_korisnika","ag","slice","dohvati_komentare","komentari","sve_za_korisnika","korisnicko_ime","res","objekti","posalji_zahtev","data","klijent","objekat","pocetak","kraj","status","dodaj_posao","greska","sleep","milliseconds","Promise","resolve","setTimeout","uspeh","brojac","modalZatvaranje","nativeElement","click","i","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\ea200304d\\Desktop\\ETF\\rti.PIA\\projekat\\frontend\\src\\app\\agencija-prikaz\\agencija-prikaz.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { KorisnikService } from '../korisnik.service';\nimport { Komentar } from '../models/komentari';\nimport { Korisnik } from '../models/korisnik';\nimport { Objekat } from '../models/objekat';\nimport { ObjekatService } from '../objekat.service';\nimport { PosloviService } from '../poslovi.service';\nimport { iif } from 'rxjs';\n\n@Component({\n  selector: 'app-agencija-prikaz',\n  templateUrl: './agencija-prikaz.component.html',\n  styleUrls: ['./agencija-prikaz.component.css']\n})\nexport class AgencijaPrikazComponent implements OnInit {\n\n  id:string\n  komentari:Komentar[]\n  agencija:Korisnik\n  ulogovan:Korisnik = null\n  objekti:Objekat[]\n\n  opis_za_prikaz:string\n  skraceni_opis:boolean=true;\n  min_datum = new Date().toISOString().split(\"T\")[0];\n  pocetak:Date\n  brojac:number\n  kraj:Date\n  objekat:string\n  constructor(private route: ActivatedRoute, private korisnik:KorisnikService, private objService:ObjekatService, private posloviService:PosloviService) { \n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.id = params.get('id')\n    })\n  }\n  prosiri_opis(){\n    console.log(\"usao\")\n    this.skraceni_opis =false;\n    this.opis_za_prikaz = this.agencija.dodatno['opis']\n  }\n  ngOnInit(): void {\n    if(sessionStorage.getItem('klijent') || sessionStorage.getItem('agencija') ){\n      this.ulogovan = JSON.parse(sessionStorage.getItem('klijent')) || JSON.parse(sessionStorage.getItem('agencija'))\n    }\n    this.korisnik.dohvati_korisnika(this.id).subscribe((ag:Korisnik)=>{\n      this.agencija = ag\n      this.opis_za_prikaz = this.agencija.dodatno['opis'].slice(0,200);\n    })\n    this.korisnik.dohvati_komentare(this.id).subscribe((komentari:Komentar[])=>{\n      if(komentari){\n        this.komentari = komentari\n        console.log(komentari)\n      }\n    })\n    this.objService.sve_za_korisnika(this.ulogovan.korisnicko_ime).subscribe((res:Objekat[])=>{\n      if(res){\n        this.objekti = res;\n      }\n    })\n    //agencija.dodatno['opis']\n    \n    \n  }\n  uspeh :string\n  greska:string\n  @ViewChild('modalZatvaranje') modalZatvaranje;\n  async posalji_zahtev(){\n    const data={\n      agencija: this.agencija.korisnicko_ime,\n      klijent: this.ulogovan.korisnicko_ime,\n      objekat: this.objekat,\n      pocetak: this.pocetak,\n      kraj: this.kraj,\n      status: \"Послат захтев\"\n    }\n    this.posloviService.dodaj_posao(data).subscribe(async (res)=>{\n      if(!this.kraj || !this.objekat || !this.pocetak || this.pocetak>this.kraj){\n        this.greska=\"Погрешно унети подаци!\"\n        return;\n      }else{\n        this.greska = null\n      }\n      const sleep = async (milliseconds) => {\n        await new Promise(resolve => {\n            return setTimeout(resolve, milliseconds)\n        });}\n      if(res['message']=='ok'){\n        this.uspeh = \"Успешно послат захтев за сарадњу! Прозор ће се затворити за: \"\n        this.brojac = 5\n        setTimeout(()=>{\n          this.uspeh = null\n          this.modalZatvaranje.nativeElement.click();\n        },5000)\n        for (let i = 5; i >0; i--) {\n          await sleep(1000);\n          this.brojac--;\n          \n      }\n        \n      }\n    })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}