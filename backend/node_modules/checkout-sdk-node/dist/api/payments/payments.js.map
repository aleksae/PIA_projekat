{"version":3,"file":"payments.js","names":["addUtilityParams","json","requiresRedirect","destination","isPending","status","hasRedirectUrl","_links","redirect","undefined","redirectLink","href","Payments","constructor","config","request","body","idempotencyKey","setSourceOrDestinationType","validatePayment","response","post","fetch","host","sk","err","error","determineError","getPaymentList","url","queryString","Object","keys","map","key","join","get","id","getActions","increment","capture","paymentId","refund","void"],"sources":["../../../src/api/payments/payments.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\r\nimport fetch from 'node-fetch';\r\nimport { determineError } from '../../services/errors';\r\nimport { get, post } from '../../services/http';\r\nimport { validatePayment, setSourceOrDestinationType } from '../../services/validation';\r\n\r\nconst addUtilityParams = (json) => {\r\n    let requiresRedirect = false;\r\n\r\n    if (json.destination) {\r\n        requiresRedirect = false;\r\n    } else {\r\n        const isPending = json.status === 'Pending';\r\n        const hasRedirectUrl = json._links.redirect !== undefined;\r\n        requiresRedirect = isPending && hasRedirectUrl;\r\n    }\r\n\r\n    // If the redirection URL exists add it to the response body as 'redirectLink'\r\n    let redirectLink;\r\n    if (requiresRedirect && json._links.redirect) {\r\n        redirectLink = json._links.redirect.href;\r\n    }\r\n    return {\r\n        ...json,\r\n        requiresRedirect,\r\n        redirectLink,\r\n    };\r\n};\r\n\r\n/**\r\n * Class dealing with the /payments endpoint\r\n *\r\n * @export\r\n * @class Payments\r\n */\r\nexport default class Payments {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Sends payment or a payout requests.\r\n     *\r\n     * @memberof Payments\r\n     * @param {Object} body Payment Request body.\r\n     * @param {string} [idempotencyKey] Idempotency Key.\r\n     * @return {Promise<Object>} A promise to payment response.\r\n     */\r\n    async request(body, idempotencyKey) {\r\n        try {\r\n            setSourceOrDestinationType(body);\r\n            validatePayment(body);\r\n\r\n            const response = await post(\r\n                fetch,\r\n                `${this.config.host}/payments`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return addUtilityParams(await response.json);\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a list of your business' payments that match the specified reference.\r\n     *\r\n     * @memberof Payments\r\n     * @param {Object} body /^(pay|sid)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @return {Promise<Object>} A promise to the get payment response.\r\n     */\r\n    async getPaymentList(body) {\r\n        let url = `${this.config.host}/payments`;\r\n\r\n        if (body) {\r\n            const queryString = Object.keys(body)\r\n                .map((key) => `${key}=${body[key]}`)\r\n                .join('&');\r\n            url += `?${queryString}`;\r\n        }\r\n\r\n        try {\r\n            const response = await get(fetch, url, this.config, this.config.sk);\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the details of the payment with the specified identifier string.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} id /^(pay|sid)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @return {Promise<Object>} A promise to the get payment response.\r\n     */\r\n    async get(id) {\r\n        try {\r\n            const response = await get(\r\n                fetch,\r\n                `${this.config.host}/payments/${id}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns all the actions associated with a payment ordered by processing date in\r\n     * descending order (latest first).\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} id /^(pay)_(\\w{26})$/ The payment identifier.\r\n     * @return {Promise<Object>} A promise to the getActions response.\r\n     */\r\n    async getActions(id) {\r\n        try {\r\n            const response = await get(\r\n                fetch,\r\n                `${this.config.host}/payments/${id}/actions`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Request an incremental authorization to increase the authorization amount or extend\r\n     * the authorization's validity period.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} id /^(pay)_(\\w{26})$/ The payment identifier.\r\n     * @param {Object} body Payment Request body.\r\n     * @return {Promise<Object>} A promise to the getActions response.\r\n     */\r\n    async increment(id, body, idempotencyKey) {\r\n        try {\r\n            const response = await post(\r\n                fetch,\r\n                `${this.config.host}/payments/${id}/authorizations`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Captures a payment if supported by the payment method.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} paymentId /^(pay)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @param {Object} [body] Capture request body.\r\n     * @param {string} [idempotencyKey] Idempotency Key.\r\n     * @return {Promise<Object>} A promise to the capture response.\r\n     */\r\n    async capture(paymentId, body, idempotencyKey) {\r\n        try {\r\n            const response = await post(\r\n                fetch,\r\n                `${this.config.host}/payments/${paymentId}/captures`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refunds a payment if supported by the payment method.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} id /^(pay)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @param {Object} [body] Refund request body.\r\n     * @param {string} [idempotencyKey] Idempotency Key.\r\n     * @return {Promise<Object>} A promise to the refund response.\r\n     */\r\n    async refund(paymentId, body, idempotencyKey) {\r\n        try {\r\n            const response = await post(\r\n                fetch,\r\n                `${this.config.host}/payments/${paymentId}/refunds`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Voids a payment if supported by the payment method.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} id /^(pay)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @param {Object} [body] Void request body.\r\n     * @param {string} [idempotencyKey] Idempotency Key.\r\n     * @return {Promise<Object>} A promise to the void response.\r\n     */\r\n    async void(paymentId, body, idempotencyKey) {\r\n        try {\r\n            const response = await post(\r\n                fetch,\r\n                `${this.config.host}/payments/${paymentId}/voids`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n}\r\n"],"mappings":";;;;;;AACA;AACA;AACA;AACA;AAAwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAExF,MAAMA,gBAAgB,GAAIC,IAAI,IAAK;EAC/B,IAAIC,gBAAgB,GAAG,KAAK;EAE5B,IAAID,IAAI,CAACE,WAAW,EAAE;IAClBD,gBAAgB,GAAG,KAAK;EAC5B,CAAC,MAAM;IACH,MAAME,SAAS,GAAGH,IAAI,CAACI,MAAM,KAAK,SAAS;IAC3C,MAAMC,cAAc,GAAGL,IAAI,CAACM,MAAM,CAACC,QAAQ,KAAKC,SAAS;IACzDP,gBAAgB,GAAGE,SAAS,IAAIE,cAAc;EAClD;;EAEA;EACA,IAAII,YAAY;EAChB,IAAIR,gBAAgB,IAAID,IAAI,CAACM,MAAM,CAACC,QAAQ,EAAE;IAC1CE,YAAY,GAAGT,IAAI,CAACM,MAAM,CAACC,QAAQ,CAACG,IAAI;EAC5C;EACA,uCACOV,IAAI;IACPC,gBAAgB;IAChBQ;EAAY;AAEpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACe,MAAME,QAAQ,CAAC;EAC1BC,WAAW,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACUC,OAAO,CAACC,IAAI,EAAEC,cAAc,EAAE;IAAA;IAAA;MAChC,IAAI;QACA,IAAAC,sCAA0B,EAACF,IAAI,CAAC;QAChC,IAAAG,2BAAe,EAACH,IAAI,CAAC;QAErB,MAAMI,QAAQ,SAAS,IAAAC,UAAI,EACvBC,kBAAK,EACJ,GAAE,KAAI,CAACR,MAAM,CAACS,IAAK,WAAU,EAC9B,KAAI,CAACT,MAAM,EACX,KAAI,CAACA,MAAM,CAACU,EAAE,EACdR,IAAI,EACJC,cAAc,CACjB;QACD,OAAOjB,gBAAgB,OAAOoB,QAAQ,CAACnB,IAAI,CAAC;MAChD,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACV,MAAMC,KAAK,SAAS,IAAAC,sBAAc,EAACF,GAAG,CAAC;QACvC,MAAMC,KAAK;MACf;IAAC;EACL;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACUE,cAAc,CAACZ,IAAI,EAAE;IAAA;IAAA;MACvB,IAAIa,GAAG,GAAI,GAAE,MAAI,CAACf,MAAM,CAACS,IAAK,WAAU;MAExC,IAAIP,IAAI,EAAE;QACN,MAAMc,WAAW,GAAGC,MAAM,CAACC,IAAI,CAAChB,IAAI,CAAC,CAChCiB,GAAG,CAAEC,GAAG,IAAM,GAAEA,GAAI,IAAGlB,IAAI,CAACkB,GAAG,CAAE,EAAC,CAAC,CACnCC,IAAI,CAAC,GAAG,CAAC;QACdN,GAAG,IAAK,IAAGC,WAAY,EAAC;MAC5B;MAEA,IAAI;QACA,MAAMV,QAAQ,SAAS,IAAAgB,SAAG,EAACd,kBAAK,EAAEO,GAAG,EAAE,MAAI,CAACf,MAAM,EAAE,MAAI,CAACA,MAAM,CAACU,EAAE,CAAC;QACnE,OAAOJ,QAAQ,CAACnB,IAAI;MACxB,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACV,YAAY,IAAAE,sBAAc,EAACF,GAAG,CAAC;MACnC;IAAC;EACL;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACUW,GAAG,CAACC,EAAE,EAAE;IAAA;IAAA;MACV,IAAI;QACA,MAAMjB,QAAQ,SAAS,IAAAgB,SAAG,EACtBd,kBAAK,EACJ,GAAE,MAAI,CAACR,MAAM,CAACS,IAAK,aAAYc,EAAG,EAAC,EACpC,MAAI,CAACvB,MAAM,EACX,MAAI,CAACA,MAAM,CAACU,EAAE,CACjB;QACD,OAAOJ,QAAQ,CAACnB,IAAI;MACxB,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACV,YAAY,IAAAE,sBAAc,EAACF,GAAG,CAAC;MACnC;IAAC;EACL;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACUa,UAAU,CAACD,EAAE,EAAE;IAAA;IAAA;MACjB,IAAI;QACA,MAAMjB,QAAQ,SAAS,IAAAgB,SAAG,EACtBd,kBAAK,EACJ,GAAE,MAAI,CAACR,MAAM,CAACS,IAAK,aAAYc,EAAG,UAAS,EAC5C,MAAI,CAACvB,MAAM,EACX,MAAI,CAACA,MAAM,CAACU,EAAE,CACjB;QACD,OAAOJ,QAAQ,CAACnB,IAAI;MACxB,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACV,YAAY,IAAAE,sBAAc,EAACF,GAAG,CAAC;MACnC;IAAC;EACL;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACUc,SAAS,CAACF,EAAE,EAAErB,IAAI,EAAEC,cAAc,EAAE;IAAA;IAAA;MACtC,IAAI;QACA,MAAMG,QAAQ,SAAS,IAAAC,UAAI,EACvBC,kBAAK,EACJ,GAAE,MAAI,CAACR,MAAM,CAACS,IAAK,aAAYc,EAAG,iBAAgB,EACnD,MAAI,CAACvB,MAAM,EACX,MAAI,CAACA,MAAM,CAACU,EAAE,EACdR,IAAI,EACJC,cAAc,CACjB;QACD,aAAaG,QAAQ,CAACnB,IAAI;MAC9B,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACV,MAAMC,KAAK,SAAS,IAAAC,sBAAc,EAACF,GAAG,CAAC;QACvC,MAAMC,KAAK;MACf;IAAC;EACL;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACUc,OAAO,CAACC,SAAS,EAAEzB,IAAI,EAAEC,cAAc,EAAE;IAAA;IAAA;MAC3C,IAAI;QACA,MAAMG,QAAQ,SAAS,IAAAC,UAAI,EACvBC,kBAAK,EACJ,GAAE,MAAI,CAACR,MAAM,CAACS,IAAK,aAAYkB,SAAU,WAAU,EACpD,MAAI,CAAC3B,MAAM,EACX,MAAI,CAACA,MAAM,CAACU,EAAE,EACdR,IAAI,EACJC,cAAc,CACjB;QACD,OAAOG,QAAQ,CAACnB,IAAI;MACxB,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACV,YAAY,IAAAE,sBAAc,EAACF,GAAG,CAAC;MACnC;IAAC;EACL;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACUiB,MAAM,CAACD,SAAS,EAAEzB,IAAI,EAAEC,cAAc,EAAE;IAAA;IAAA;MAC1C,IAAI;QACA,MAAMG,QAAQ,SAAS,IAAAC,UAAI,EACvBC,kBAAK,EACJ,GAAE,MAAI,CAACR,MAAM,CAACS,IAAK,aAAYkB,SAAU,UAAS,EACnD,MAAI,CAAC3B,MAAM,EACX,MAAI,CAACA,MAAM,CAACU,EAAE,EACdR,IAAI,EACJC,cAAc,CACjB;QACD,OAAOG,QAAQ,CAACnB,IAAI;MACxB,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACV,YAAY,IAAAE,sBAAc,EAACF,GAAG,CAAC;MACnC;IAAC;EACL;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACUkB,IAAI,CAACF,SAAS,EAAEzB,IAAI,EAAEC,cAAc,EAAE;IAAA;IAAA;MACxC,IAAI;QACA,MAAMG,QAAQ,SAAS,IAAAC,UAAI,EACvBC,kBAAK,EACJ,GAAE,MAAI,CAACR,MAAM,CAACS,IAAK,aAAYkB,SAAU,QAAO,EACjD,MAAI,CAAC3B,MAAM,EACX,MAAI,CAACA,MAAM,CAACU,EAAE,EACdR,IAAI,EACJC,cAAc,CACjB;QACD,OAAOG,QAAQ,CAACnB,IAAI;MACxB,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACV,YAAY,IAAAE,sBAAc,EAACF,GAAG,CAAC;MACnC;IAAC;EACL;AACJ;AAAC"}