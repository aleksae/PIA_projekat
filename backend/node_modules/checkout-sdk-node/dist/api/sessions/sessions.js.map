{"version":3,"file":"sessions.js","names":["Sessions","constructor","config","request","body","response","post","fetch","host","sk","json","err","error","determineError","get","id","channel","headers","update","put","complete","update3DSMethodCompletionIndicator","threeDsMethodCompletion","three_ds_method_completion"],"sources":["../../../src/api/sessions/sessions.js"],"sourcesContent":["import fetch from 'node-fetch';\r\nimport { determineError } from '../../services/errors';\r\nimport { get, post, put } from '../../services/http';\r\n\r\n/**\r\n * Class dealing with the /sessions endpoint\r\n *\r\n * @export\r\n * @class Sessions\r\n */\r\nexport default class Sessions {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Create a payment session to authenticate a cardholder before requesting a payment.\r\n     *\r\n     * @memberof Sessions\r\n     * @param {Object} body Sessions request body.\r\n     * @return {Promise<Object>} A promise to the sessions response.\r\n     */\r\n    async request(body) {\r\n        try {\r\n            const response = await post(\r\n                fetch,\r\n                `${this.config.host}/sessions`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the details of the session with the specified identifier string.\r\n     *\r\n     * @memberof Sessions\r\n     * @param {string} id Sessions id.\r\n     * @param {string} channel Type of channnel.\r\n     * @return {Promise<Object>} A promise to the sessions response.\r\n     */\r\n    async get(id, channel) {\r\n        try {\r\n            this.config.headers = { ...this.config.headers, channel };\r\n\r\n            const response = await get(\r\n                fetch,\r\n                `${this.config.host}/sessions/${id}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update a session by providing information about the environment.\r\n     *\r\n     * @memberof Sessions\r\n     * @param {string} id Sessions id.\r\n     * @param {Object} body Sessions request body.\r\n     * @return {Promise<Object>} A promise to the sessions response.\r\n     */\r\n    async update(id, body) {\r\n        try {\r\n            const response = await put(\r\n                fetch,\r\n                `${this.config.host}/sessions/${id}/collect-data`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Completes a session by posting the the following request to the callback URL\r\n     * (only relevant for non hosted sessions)\r\n     *\r\n     * @memberof Sessions\r\n     * @param {string} id Sessions id.\r\n     * @return {Promise<Object>} A promise to the sessions response.\r\n     */\r\n    async complete(id) {\r\n        try {\r\n            const response = await post(\r\n                fetch,\r\n                `${this.config.host}/sessions/${id}/complete`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Completes a session by posting the the following request to the callback URL\r\n     * (only relevant for non hosted sessions)\r\n     *\r\n     * @memberof Sessions\r\n     * @param {string} id Sessions id.\r\n     * @param {string} threeDsMethodCompletion 3DS Method completion indicator\r\n     * @return {Promise<Object>} A promise to the sessions response.\r\n     */\r\n    async update3DSMethodCompletionIndicator(id, threeDsMethodCompletion) {\r\n        try {\r\n            const body = {\r\n                three_ds_method_completion: threeDsMethodCompletion,\r\n            };\r\n\r\n            const response = await put(\r\n                fetch,\r\n                `${this.config.host}/sessions/${id}/issuer-fingerprint`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"}