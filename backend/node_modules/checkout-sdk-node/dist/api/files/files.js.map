{"version":3,"file":"files.js","names":["FormData","require","Files","constructor","config","upload","body","form","isUrl","file","append","filename","split","pop","path","response","post","fetch","host","formData","sk","json","err","error","determineError","getFile","fileId","get","string","url","URL","_","protocol"],"sources":["../../../src/api/files/files.js"],"sourcesContent":["import fetch from 'node-fetch';\r\nimport { determineError } from '../../services/errors';\r\nimport { get, post } from '../../services/http';\r\n\r\nconst FormData = require('form-data');\r\n\r\n/**\r\n * Class dealing with the /files endpoint\r\n *\r\n * @export\r\n * @class Files\r\n */\r\nexport default class Files {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Upload a file to use as evidence in a dispute. Your file must be in either JPEG/JPG,\r\n     * PNG or PDF format, and be no larger than 4MB.\r\n     *\r\n     * @memberof Files\r\n     * @param {Object} body Files request body.\r\n     * @return {Promise<Object>} A promise to the files response.\r\n     */\r\n    async upload(body) {\r\n        try {\r\n            const form = new FormData();\r\n\r\n            // Handle local files and remote files\r\n            if (isUrl(body.file)) {\r\n                // use file and file name from remote\r\n                form.append('file', body.file, {\r\n                    filename: body.file.split('/').pop().split('#')[0].split('?')[0],\r\n                });\r\n            } else {\r\n                // use the local file\r\n                form.append('file', body.file || body.path);\r\n            }\r\n            form.append('purpose', 'dispute_evidence');\r\n\r\n            const response = await post(\r\n                fetch,\r\n                `${this.config.host}/files`,\r\n                { ...this.config, formData: true },\r\n                this.config.sk,\r\n                form\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve information about a file that was previously uploaded.\r\n     *\r\n     * @memberof Files\r\n     * @param {string} fileId Files id.\r\n     * @return {Promise<Object>} A promise to the files response.\r\n     */\r\n    async getFile(fileId) {\r\n        try {\r\n            const response = await get(\r\n                fetch,\r\n                `${this.config.host}/files/${fileId}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\nconst isUrl = (string) => {\r\n    let url;\r\n\r\n    try {\r\n        url = new URL(string);\r\n    } catch (_) {\r\n        return false;\r\n    }\r\n\r\n    return url.protocol === 'http:' || url.protocol === 'https:';\r\n};\r\n"],"mappings":";;;;;;AAAA;AACA;AACA;AAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhD,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,KAAK,CAAC;EACvBC,WAAW,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACUC,MAAM,CAACC,IAAI,EAAE;IAAA;IAAA;MACf,IAAI;QACA,MAAMC,IAAI,GAAG,IAAIP,QAAQ,EAAE;;QAE3B;QACA,IAAIQ,KAAK,CAACF,IAAI,CAACG,IAAI,CAAC,EAAE;UAClB;UACAF,IAAI,CAACG,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAACG,IAAI,EAAE;YAC3BE,QAAQ,EAAEL,IAAI,CAACG,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;UACnE,CAAC,CAAC;QACN,CAAC,MAAM;UACH;UACAL,IAAI,CAACG,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAACG,IAAI,IAAIH,IAAI,CAACQ,IAAI,CAAC;QAC/C;QACAP,IAAI,CAACG,MAAM,CAAC,SAAS,EAAE,kBAAkB,CAAC;QAE1C,MAAMK,QAAQ,SAAS,IAAAC,UAAI,EACvBC,kBAAK,EACJ,GAAE,KAAI,CAACb,MAAM,CAACc,IAAK,QAAO,kCACtB,KAAI,CAACd,MAAM;UAAEe,QAAQ,EAAE;QAAI,IAChC,KAAI,CAACf,MAAM,CAACgB,EAAE,EACdb,IAAI,CACP;QACD,aAAaQ,QAAQ,CAACM,IAAI;MAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACV,MAAMC,KAAK,SAAS,IAAAC,sBAAc,EAACF,GAAG,CAAC;QACvC,MAAMC,KAAK;MACf;IAAC;EACL;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACUE,OAAO,CAACC,MAAM,EAAE;IAAA;IAAA;MAClB,IAAI;QACA,MAAMX,QAAQ,SAAS,IAAAY,SAAG,EACtBV,kBAAK,EACJ,GAAE,MAAI,CAACb,MAAM,CAACc,IAAK,UAASQ,MAAO,EAAC,EACrC,MAAI,CAACtB,MAAM,EACX,MAAI,CAACA,MAAM,CAACgB,EAAE,CACjB;QACD,aAAaL,QAAQ,CAACM,IAAI;MAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACV,MAAMC,KAAK,SAAS,IAAAC,sBAAc,EAACF,GAAG,CAAC;QACvC,MAAMC,KAAK;MACf;IAAC;EACL;AACJ;AAAC;AAED,MAAMf,KAAK,GAAIoB,MAAM,IAAK;EACtB,IAAIC,GAAG;EAEP,IAAI;IACAA,GAAG,GAAG,IAAIC,GAAG,CAACF,MAAM,CAAC;EACzB,CAAC,CAAC,OAAOG,CAAC,EAAE;IACR,OAAO,KAAK;EAChB;EAEA,OAAOF,GAAG,CAACG,QAAQ,KAAK,OAAO,IAAIH,GAAG,CAACG,QAAQ,KAAK,QAAQ;AAChE,CAAC"}