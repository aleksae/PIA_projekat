{"version":3,"file":"transfers.js","names":["Transfers","constructor","config","initiate","body","idempotencyKey","url","host","includes","TRANSFERS_SANDBOX_URL","TRANSFERS_LIVE_URL","response","post","fetch","sk","json","err","error","determineError","retrieve","id","get"],"sources":["../../../src/api/transfers/transfers.js"],"sourcesContent":["import fetch from 'node-fetch';\r\nimport { determineError } from '../../services/errors';\r\nimport { get, post } from '../../services/http';\r\nimport { TRANSFERS_SANDBOX_URL, TRANSFERS_LIVE_URL } from '../../config';\r\nimport { setTokenType } from '../../services/validation';\r\n\r\n/**\r\n * Class dealing with the /transfers endpoint\r\n *\r\n * @export\r\n * @class Transfers\r\n */\r\nexport default class Transfers {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Initiate a transfer of funds from source entity to destination entity.\r\n     *\r\n     * @memberof Transfers\r\n     * @param {Object} body Transfers request body.\r\n     * @param {string} [idempotencyKey] Idempotency Key.\r\n     * @return {Promise<Object>} A promise to the request transfers response.\r\n     */\r\n    async initiate(body, idempotencyKey) {\r\n        try {\r\n            const url = `${\r\n                this.config.host.includes('sandbox') ? TRANSFERS_SANDBOX_URL : TRANSFERS_LIVE_URL\r\n            }`;\r\n\r\n            const response = await post(\r\n                fetch,\r\n                url,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve transfer details using the transfer identifier.\r\n     *\r\n     * @memberof Transfers\r\n     * @param {string} id tra_XXX The transfer identifier.\r\n     * @return {Promise<Object>} A promise to the transfer response.\r\n     */\r\n    async retrieve(id) {\r\n        try {\r\n            const url = `${\r\n                this.config.host.includes('sandbox') ? TRANSFERS_SANDBOX_URL : TRANSFERS_LIVE_URL\r\n            }/${id}`;\r\n\r\n            const response = await get(fetch, url, this.config, this.config.sk);\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAAyD;AAAA;AAAA;AAEzD;AACA;AACA;AACA;AACA;AACA;AACe,MAAMA,SAAS,CAAC;EAC3BC,WAAW,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACUC,QAAQ,CAACC,IAAI,EAAEC,cAAc,EAAE;IAAA;IAAA;MACjC,IAAI;QACA,MAAMC,GAAG,GAAI,GACT,KAAI,CAACJ,MAAM,CAACK,IAAI,CAACC,QAAQ,CAAC,SAAS,CAAC,GAAGC,6BAAqB,GAAGC,0BAClE,EAAC;QAEF,MAAMC,QAAQ,SAAS,IAAAC,UAAI,EACvBC,kBAAK,EACLP,GAAG,EACH,KAAI,CAACJ,MAAM,EACX,KAAI,CAACA,MAAM,CAACY,EAAE,EACdV,IAAI,EACJC,cAAc,CACjB;QACD,aAAaM,QAAQ,CAACI,IAAI;MAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACV,MAAMC,KAAK,SAAS,IAAAC,sBAAc,EAACF,GAAG,CAAC;QACvC,MAAMC,KAAK;MACf;IAAC;EACL;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACUE,QAAQ,CAACC,EAAE,EAAE;IAAA;IAAA;MACf,IAAI;QACA,MAAMd,GAAG,GAAI,GACT,MAAI,CAACJ,MAAM,CAACK,IAAI,CAACC,QAAQ,CAAC,SAAS,CAAC,GAAGC,6BAAqB,GAAGC,0BAClE,IAAGU,EAAG,EAAC;QAER,MAAMT,QAAQ,SAAS,IAAAU,SAAG,EAACR,kBAAK,EAAEP,GAAG,EAAE,MAAI,CAACJ,MAAM,EAAE,MAAI,CAACA,MAAM,CAACY,EAAE,CAAC;QACnE,aAAaH,QAAQ,CAACI,IAAI;MAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACV,MAAMC,KAAK,SAAS,IAAAC,sBAAc,EAACF,GAAG,CAAC;QACvC,MAAMC,KAAK;MACf;IAAC;EACL;AACJ;AAAC"}