{"version":3,"file":"webhooks.js","names":["Webhooks","constructor","config","retrieveWebhooks","response","get","fetch","host","sk","json","err","error","determineError","registerWebhook","body","post","retrieveWebhook","id","updateWebhook","put","partiallyUpdateWebhook","patch","removeWebhook","_delete"],"sources":["../../../src/api/webhooks/webhooks.js"],"sourcesContent":["import fetch from 'node-fetch';\r\nimport { determineError } from '../../services/errors';\r\nimport { _delete, get, patch, post, put } from '../../services/http';\r\n\r\n/**\r\n * Create and manage the webhook notifications you receive to keep up to date with\r\n * the status of your transactions.\r\n *\r\n * @export\r\n * @class Webhooks\r\n */\r\nexport default class Webhooks {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the webhooks configured for the channel identified by your API key\r\n     *\r\n     * @memberof Webhooks\r\n     * @return {Promise<Object>} A promise to the request webhooks response.\r\n     */\r\n    async retrieveWebhooks() {\r\n        try {\r\n            const response = await get(\r\n                fetch,\r\n                `${this.config.host}/webhooks`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Register a new webhook endpoint that Checkout.com will post all or selected events to\r\n     *\r\n     * @memberof Webhooks\r\n     * @return {Promise<Object>} A promise to the register webhook response.\r\n     */\r\n    async registerWebhook(body) {\r\n        try {\r\n            const response = await post(\r\n                fetch,\r\n                `${this.config.host}/webhooks`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the webhook with the specified identifier string\r\n     *\r\n     * @memberof Webhooks\r\n     * @return {Promise<Object>} A promise to the retrieve webhook response.\r\n     */\r\n    async retrieveWebhook(id) {\r\n        try {\r\n            const response = await get(\r\n                fetch,\r\n                `${this.config.host}/webhooks/${id}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates an existing webhook\r\n     *\r\n     * @memberof Webhooks\r\n     * @return {Promise<Object>} A promise to the update webhook response.\r\n     */\r\n    async updateWebhook(id, body) {\r\n        try {\r\n            const response = await put(\r\n                fetch,\r\n                `${this.config.host}/webhooks/${id}`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates all or some of the registered webhook details\r\n     *\r\n     * @memberof Webhooks\r\n     * @return {Promise<Object>} A promise to the update webhook response.\r\n     */\r\n    async partiallyUpdateWebhook(id, body) {\r\n        try {\r\n            const response = await patch(\r\n                fetch,\r\n                `${this.config.host}/webhooks/${id}`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes an existing webhook\r\n     *\r\n     * @memberof Webhooks\r\n     * @return {Promise<Object>} A promise to the remove webhook response.\r\n     */\r\n    async removeWebhook(id) {\r\n        try {\r\n            const response = await _delete(\r\n                fetch,\r\n                `${this.config.host}/webhooks/${id}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"}